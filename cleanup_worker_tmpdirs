#!/usr/bin/env perl
# Copyright [1999-2015] Wellcome Trust Sanger Institute and the EMBL-European Bioinformatics Institute
# Copyright [2016-2019] EMBL-European Bioinformatics Institute
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

use warnings;
use strict;
use Getopt::Long;

my ($force, $help, $tmp_root, $dry_run);
GetOptions(
    "f|force"      => \$force,
    "h|help"       => \$help,
    "t|tmp_root=s" => \$tmp_root,
    "dry_run"      => \$dry_run,
);
&helptext if ( $help );

$tmp_root ||= '/scratch';
my $user = $ENV{USER};

my @hosts = `bhosts | awk '{print \$1}'`;
chomp @hosts;
@hosts = grep { $_ =~ /^ebi\d/ || $_ =~ /^hx-noah-\d{2}-\d{2}/ } @hosts;

my $filter = $ARGV[0];
unless ( defined $filter || defined $force ){
    print "No filter defined - please use --force flag to remove *all* tmp dirs owned by you\n\n";
    &helptext;
}

$filter =~ s/^${user}_//; # ensure username is not given twice
my $delete_dir = "$tmp_root/worker_${user}_${filter}*";
foreach my $host ( @hosts ) {
    my $cmd = "ssh $host rm -rf $delete_dir";
    print "$cmd\n";
    system($cmd) unless $dry_run;
}

sub helptext {
	my $message = <<"END_MESSAGE";
Usage: cleanup_worker_tmpdirs [options] <pipeline_name>

* Options:
  -t|tmp_root   root dir of tmp location (default: /scratch)
  -f|force      if no pipeline_name is given, force the script to
                delete all tmp dirs belonging to you
  -dry_run      print the cleanup commands - don't run them
  -h|help       this help message, obviously!

NOTE: this script only works if you can ssh to all nodes without the
      need for a password. Set up ssh keys before use.

END_MESSAGE
   	print $message;
   	exit(0);
}
